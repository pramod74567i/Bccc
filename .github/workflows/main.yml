name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        build_type: [Release]
        c_compiler: [gcc]
        include:
          - os: windows-latest
          
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
       

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Install Dependencies (Ubuntu only)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update && sudo apt-get install -y gcc g++ clang python3-pip
        pip3 install requests telebot flask pymongo aiohttp python-telegram-bot

    - name: Compile C++ File (raja.cpp)
      if: matrix.os == 'matrix.os'
      run: g++ -o raja raja.cpp -std=c++11 -pthread

    - name: Run Python Script
      run: pip3 install requests telebot flask pymongo aiohttp python-telegram-bot && python3 d.py || echo "Application crashed. Restarting..."

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
